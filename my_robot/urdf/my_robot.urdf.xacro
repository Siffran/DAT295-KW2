<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="my_robot">

  <xacro:property name="length" value="1.21" />
  <xacro:property name="width" value="1" />
  <xacro:property name="height" value="0.5" />
  <xacro:property name="length_wheel_disc" value="0.01" />
  <xacro:property name="radius_wheel_disc" value="0.15" />
  <xacro:property name="length_wheel" value="0.11" />
  <xacro:property name="radius_wheel" value="0.12" />
  <xacro:property name="wheel_offset" value="0.61" />
  <xacro:property name="cone_scale" value="0.5 0.5 0.5" />
  <xacro:property name="cone_name" value="cone.dae" />



  <xacro:macro name="default_inertial" params="mass">
    <inertial>
      <origin rpy="0.0 0 0" xyz="0 0 0"/>
      <mass value="${mass}" />
      <!--<inertia ixx="0.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="0.0" />-->
      <inertia ixx="1.0" ixy="0.0" ixz="0.0"
               iyy="1.0" iyz="0.0"
               izz="1.0" />
    </inertial>
  </xacro:macro>


  <link name="base_footprint">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0 0 0"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0 0 0"/>
      </geometry>
    </collision>
    <xacro:default_inertial mass="0.1"/>
  </link>

  <link name="base_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="${length} ${width} ${height/2}"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="${length} ${width} ${height/2}"/>
      </geometry>
    </collision>
    <xacro:default_inertial mass="30"/>
  </link>

  <link name="wheel_1">
    <visual>
      <geometry>
        <mesh filename="package://my_robot/urdf/${cone_name}" scale="${cone_scale}"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </visual>

    <collision>
      <geometry>
        <mesh filename="package://my_robot/urdf/${cone_name}" scale="${cone_scale}"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </collision>

    <xacro:default_inertial mass="3"/>
  </link>

  <link name="wheel_2">
    <visual>
      <geometry>
        <mesh filename="package://my_robot/urdf/${cone_name}" scale="${cone_scale}"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </visual>

    <collision>
      <geometry>
        <mesh filename="package://my_robot/urdf/${cone_name}" scale="${cone_scale}"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </collision>

    <xacro:default_inertial mass="3"/>
  </link>


  <link name="wheel_3">
    <visual>
      <geometry>
        <mesh filename="package://my_robot/urdf/${cone_name}" scale="${cone_scale}"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </visual>

    <collision>
      <geometry>
        <mesh filename="package://my_robot/urdf/${cone_name}" scale="${cone_scale}"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </collision>

    <xacro:default_inertial mass="3"/>
  </link>

  <link name="wheel_4">
    <visual>
      <geometry>
        <mesh filename="package://my_robot/urdf/${cone_name}" scale="${cone_scale}"/>
      </geometry>
    <origin rpy="0 0 0" xyz="0 0 0"/>
    </visual>

    <collision>
      <geometry>
        <mesh filename="package://my_robot/urdf/${cone_name}" scale="${cone_scale}"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </collision>

    <xacro:default_inertial mass="3"/>
  </link>

  <link name="imu_link">
    <visual>
      <geometry>
        <box size="0.1 0.1 0.1"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <material name="black">
        <color rgba="0 0 0 1"/>
      </material>
    </visual>

    <collision>
      <geometry>
        <box size="0.1 0.1 0.1"/>
      </geometry>
    </collision>

    <xacro:default_inertial mass="0.1"/>
  </link>

  <link name="gps_link">
    <visual>
      <geometry>
        <box size="0.1 0.1 0.1"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <material name="black">
        <color rgba="0 0 0 1"/>
      </material>
    </visual>

    <collision>
      <geometry>
        <box size="0.1 0.1 0.1"/>
      </geometry>
    </collision>

    <xacro:default_inertial mass="0.1"/>
  </link>

  <link name="laserscan_link">
    <visual>
      <geometry>
        <box size="0.05 0.05 0.4"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </visual>

    <collision>
      <geometry>
        <box size="0.05 0.05 0.4"/>
      </geometry>
    </collision>

    <xacro:default_inertial mass="0.1"/>
  </link>

  <joint name="my_robot_base" type="prismatic">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="base_footprint"/>
    <child link="base_link"/>
    <axis xyz="0 1 0"/>
    <dynamics damping="1" friction="1"/>
    <limit effort="10000" lower="-50.0" upper="600.0" velocity="0.1"/>
  </joint>

  <joint name="base_to_wheel1" type="continuous">
    <parent link="base_link"/>
    <child link="wheel_1"/>
    <origin rpy="0 1.5707 0" xyz="${wheel_offset} 0.4 0"/>
    <axis xyz="0 0 1" />
  </joint>

  <joint name="base_to_wheel2" type="continuous">
    <parent link="base_link"/>
    <child link="wheel_2"/>
    <origin rpy="0 4.7121 0" xyz="${-wheel_offset} 0.4 0"/>
    <axis xyz="0 0 1" />
  </joint>

  <joint name="base_to_wheel3" type="continuous">
    <parent link="base_link"/>
    <child link="wheel_3"/>
    <origin rpy="0 1.5707 0" xyz="${wheel_offset} -0.4 0"/>
    <axis xyz="0 0 1" />
  </joint>

  <joint name="base_to_wheel4" type="continuous">
    <parent link="base_link"/>
    <child link="wheel_4"/>
    <origin rpy="0 4.7121 0" xyz="${-wheel_offset} -0.4 0"/>
    <axis xyz="0 0 1" />
  </joint>

  <joint name="base_to_imu" type="fixed">
    <parent link="base_link"/>
    <child link="imu_link"/>
    <origin rpy="0.0 0.0 0.0" xyz="0.0 0.0 0.175"/>
    <axis xyz="0 0 1" />
  </joint>

  <joint name="base_to_gps" type="fixed">
    <parent link="base_link"/>
    <child link="gps_link"/>
    <origin rpy="0.0 0.0 0.0" xyz="0.0 -0.2 0.175"/>
    <axis xyz="0 0 1" />
  </joint>

  <joint name="base_to_laserscan" type="fixed">
    <parent link="base_link"/>
    <child link="laserscan_link"/>
    <origin rpy="0.0 0.0 ${pi}" xyz="0.0 0.2 0.800"/>
    <axis xyz="0 0 1" />
  </joint>

  <transmission name="transmission_wheel_1">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="base_to_wheel1">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor_wheel_1">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>

  <transmission name="transmission_wheel_2">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="base_to_wheel2">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor_wheel_2">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>

  <gazebo reference="base_link">
    <material>Gazebo/Blue</material>
    <gravity>1</gravity>
  </gazebo>

  <gazebo reference="wheel_1">
    <mu1 value="200.0"/>
    <mu2 value="100.0"/>
    <kp value="10000000.0" />
    <kd value="1.0" />
    <material>Gazebo/Yellow</material>
  </gazebo>

  <gazebo reference="wheel_2">
    <mu1 value="200.0"/>
    <mu2 value="100.0"/>
    <kp value="10000000.0" />
    <kd value="1.0" />
    <material>Gazebo/Yellow</material>
  </gazebo>

  <gazebo reference="wheel_3">
    <mu1 value="200.0"/>
    <mu2 value="100.0"/>
    <kp value="10000000.0" />
    <kd value="1.0" />
    <material>Gazebo/Yellow</material>
  </gazebo>

  <gazebo reference="wheel_4">
    <mu1 value="200.0"/>
    <mu2 value="100.0"/>
    <kp value="10000000.0" />
    <kd value="1.0" />
    <material>Gazebo/Yellow</material>
  </gazebo>

  <!-- Gazebo plugin for ROS Control -->
  <gazebo>
      <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
        <robotNamespace>/my_robot</robotNamespace>
      </plugin>
  </gazebo>

  <!-- Gazebo plugin for IMU-->
  <gazebo reference="imu_link">
    <material>Gazebo/Black</material>
    <gravity>true</gravity>
    <sensor name="imu_sensor" type="imu">
      <always_on>true</always_on>
      <update_rate>50</update_rate>
      <visualize>true</visualize>
      <topic>__default_topic__</topic>
      <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
        <topicName>imu</topicName>
        <bodyName>imu_link</bodyName>
        <updateRateHZ>50.0</updateRateHZ> <!-- 10 -->
        <gaussianNoise>0.0</gaussianNoise>
        <xyzOffset>0 0 0</xyzOffset>
        <rpyOffset>0 0 0</rpyOffset>
        <frameName>imu_link</frameName>
        <initialOrientationAsReference>false</initialOrientationAsReference>
      </plugin>
      <pose>0 0 0 0 0 0</pose>
    </sensor>
  </gazebo>

  <!-- Plugin for GPS sensor -->
  <gazebo reference="gps_link">
    <material>Gazebo/White</material>
  </gazebo>

  <gazebo> <!--Does not work to put reference to gps_link here, see: https://answers.ros.org/question/44732/gps-hector-gazebo/-->
    <plugin name="gps_sim" filename="libhector_gazebo_ros_gps.so">
      <updateRate>40</updateRate>
      <bodyName>gps_link</bodyName>
      <topicName>gps</topicName>
      <referenceLatitude>57.70887</referenceLatitude>
      <referenceLongitude>11.97456</referenceLongitude>
      <drift>0.0 0.0 0.0</drift>
      <gaussianNoise>0.5 0.5 0.0</gaussianNoise>
      <velocityDrift>0 0 0</velocityDrift>
      <velocityGaussianNoise>0.0 0.0 0.0</velocityGaussianNoise>
    </plugin>
  </gazebo>

    <!-- Gazebo plugin for laser scan sensor-->
  <gazebo reference="laserscan_link">
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <material>Gazebo/Orange</material>
  </gazebo>
  <gazebo reference="laserscan_link">
    <sensor type="ray" name="head_hokuyo_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>200</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-1.570796</min_angle>
            <max_angle>1.570796</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>40.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
        <topicName>/rrbot/laser/scan</topicName>
        <frameName>hokuyo_link</frameName>
      </plugin>
    </sensor>
  </gazebo>

</robot>
